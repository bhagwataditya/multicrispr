% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/06_find_spacers.R
\name{find_spacers}
\alias{find_spacers}
\title{Find crispr spacers in targetranges}
\usage{
find_spacers(
  gr,
  bsgenome,
  spacer = strrep("N", 20),
  pam = "NGG",
  complement = TRUE,
  verbose = TRUE,
  plot = TRUE,
  ...
)
}
\arguments{
\item{gr}{\code{\link[GenomicRanges]{GRanges-class}}}

\item{bsgenome}{\code{\link[BSgenome]{BSgenome-class}}}

\item{spacer}{string: spacer pattern in extended IUPAC alphabet}

\item{pam}{string: pam pattern in extended IUPAC alphabet}

\item{complement}{TRUE (default) or FALSE: also search in compl ranges?}

\item{verbose}{TRUE (default) or FALSE}

\item{plot}{TRUE (default) or FALSE}

\item{...}{passed to plot_intervals}
}
\value{
\code{\link[GenomicRanges]{GRanges-class}}
}
\description{
Find crispr spacers in targetranges
}
\examples{
# PE example
#-----------
    require(magrittr)
    bsgenome <- BSgenome.Hsapiens.UCSC.hg38::BSgenome.Hsapiens.UCSC.hg38  
    gr <- char_to_granges(c(PRNP = 'chr20:4699600:+',             # snp
                            HBB  = 'chr11:5227002:-',             # snp
                            HEXA = 'chr15:72346580-72346583:-',   # del
                            CFTR = 'chr7:117559593-117559595:+'), # ins
                          bsgenome)
    plot_intervals(gr)
    find_pe_spacers(gr, bsgenome)
    find_spacers(extend_for_pe(gr), bsgenome, complement = FALSE)
          # complement = FALSE because extend_for_pe  already 
          # adds  reverse complements and does so in a strand-specific 
          # manner
    
# TFBS example
#-------------
    bsgenome <- BSgenome.Mmusculus.UCSC.mm10::BSgenome.Mmusculus.UCSC.mm10
    bedfile  <- system.file('extdata/SRF.bed', package='multicrispr')
    gr <- bed_to_granges(bedfile, 'mm10') \%>\% extend()
    find_spacers(gr, bsgenome)
}
\seealso{
\code{\link{find_pe_spacers}} to find prime editing spacers
}
