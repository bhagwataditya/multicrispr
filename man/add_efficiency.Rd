% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/08_filter_efficient.R
\name{add_efficiency}
\alias{add_efficiency}
\alias{filter_efficient}
\title{Add efficiency scores and filter}
\usage{
add_efficiency(
  spacers,
  bsgenome,
  method = c("Doench2014", "Doench2016")[1],
  chunksize = 10000,
  verbose = TRUE,
  plot = TRUE,
  alpha_var = default_alpha_var(spacers)
)

filter_efficient(
  spacers,
  bsgenome,
  method = c("Doench2014", "Doench2016")[1],
  cutoff,
  verbose = TRUE,
  plot = TRUE,
  alpha_var = default_alpha_var(spacers)
)
}
\arguments{
\item{spacers}{\code{\link[GenomicRanges]{GRanges-class}}: spacers}

\item{bsgenome}{\code{\link[BSgenome]{BSgenome-class}}}

\item{method}{'Doench2014' (default) or 'Doench2016'
(requires non-NULL argument python, virtualenv, or condaenv)}

\item{chunksize}{Doench2016 is executed in chunks of chunksize}

\item{verbose}{TRUE (default) or FALSE}

\item{plot}{TRUE (default) or FALSE}

\item{alpha_var}{NULL or string: var mapped to alpha in plot}

\item{cutoff}{value to filter on}
}
\value{
numeric vector
}
\description{
Add Doench2014 or Doench2016 efficiency scores and filter on them
}
\details{
\code{add_efficiency} adds efficiency scores
\code{filter_efficiency} adds efficiency scores and filters on them
}
\examples{

# Install azimuth 
#----------------
    ## With reticulate
    # require(reticulate)
    # conda_create('azienv', c('python=2.7'))
    # use_condaenv('azienv')
    # py_install(c('azimuth', 'scikit-learn==0.17.1'), 'azienv', pip = TRUE)
    
    ## Directly
    # conda create --name azienv python=2.7
    # conda activate azienv
    # pip install azimuth
    # pip install scikit-learn==0.17.1
    
# PE example
#-----------
    require(magrittr)
    bsgenome <- BSgenome.Hsapiens.UCSC.hg38::BSgenome.Hsapiens.UCSC.hg38  
    targets <- char_to_granges(c(PRNP = 'chr20:4699600:+',             # snp
                                 HBB  = 'chr11:5227002:-',             # snp
                                 HEXA = 'chr15:72346580-72346583:-',   # del
                                 CFTR = 'chr7:117559593-117559595:+'), # ins
                               bsgenome)
    spacers <- find_pe_spacers(targets, bsgenome)
   #spacers <- find_spacers(extend_for_pe(gr), bsgenome, complement = FALSE)
    (spacers \%<>\% add_efficiency(bsgenome, 'Doench2014'))
    # reticulate::use_condaenv('azienv')
    # reticulate::import('azimuth')
    # spacers \%<>\% add_efficiency(bsgenome, 'Doench2016')
    # filter_efficient(spacers, bsgenome, 'Doench2016', 0.4)
    
# TFBS example
#-------------
    bedfile  <- system.file('extdata/SRF.bed', package = 'multicrispr')
    bsgenome <- BSgenome.Mmusculus.UCSC.mm10::BSgenome.Mmusculus.UCSC.mm10
    targets <- extend(bed_to_granges(bedfile, 'mm10'))
    spacers <- find_spacers(targets, bsgenome)
    # reticulate::use_condaenv('azienv')
    # reticulate::import('azienv')
    # (spacers \%<>\% add_specificity(targets, bsgenome))
    # (spacers \%>\% add_efficiency(bsgenome, 'Doench2014'))
    # (spacers \%>\% add_efficiency(bsgenome, 'Doench2016'))
    #  spacers \%>\% filter_efficient(bsgenome, 'Doench2016', 0.4)
}
\references{
Doench 2014, Rational design of highly active sgRNAs for 
CRISPR-Cas9-mediated gene inactivation. Nature Biotechnology,
doi: 10.1038/nbt.3026

Doench 2016, Optimized sgRNA design to maximize activity and minimize 
off-target effects of CRISPR-Cas9. Nature Biotechnology, 
doi: 10.1038/nbt.3437

Python module azimuth: github/MicrosoftResearch/azimuth
}
