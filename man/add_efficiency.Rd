% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/07_score_spacers.R
\name{add_efficiency}
\alias{add_efficiency}
\alias{filter_efficient}
\title{Add efficiency scores}
\usage{
add_efficiency(
  spacers,
  bsgenome,
  method = c("Doench2014", "Doench2016")[1],
  python = NULL,
  virtualenv = NULL,
  condaenv = NULL,
  verbose = TRUE,
  plot = TRUE,
  alpha_var = default_alpha_var(spacers)
)

filter_efficient(
  spacers,
  bsgenome,
  method = c("Doench2014", "Doench2016")[1],
  cutoff,
  python = NULL,
  virtualenv = NULL,
  condaenv = NULL,
  verbose = TRUE,
  plot = TRUE,
  alpha_var = default_alpha_var(gr)
)
}
\arguments{
\item{spacers}{\code{\link[GenomicRanges]{GRanges-class}}: spacers}

\item{bsgenome}{\code{\link[BSgenome]{BSgenome-class}}}

\item{method}{'Doench2014' (default) or 'Doench2016'
(requires non-NULL argument python, virtualenv, or condaenv)}

\item{python}{NULL (default) or python binary path with module azimuth}

\item{virtualenv}{NULL (default) or python virtualenv with module azimuth}

\item{condaenv}{NULL (default) or python condaenv with module azimuth}

\item{verbose}{TRUE (default) or FALSE}

\item{plot}{TRUE (default) or FALSE}

\item{alpha_var}{NULL or string: var mapped to alpha in plot}
}
\value{
numeric vector
}
\description{
Add Doench2014 or Doench2016 efficiency scores
}
\examples{
# PE example
#-----------
    require(magrittr)
    bsgenome <- BSgenome.Hsapiens.UCSC.hg38::BSgenome.Hsapiens.UCSC.hg38  
    gr <- char_to_granges(c(PRNP = 'chr20:4699600:+',             # snp
                            HBB  = 'chr11:5227002:-',             # snp
                            HEXA = 'chr15:72346580-72346583:-',   # del
                            CFTR = 'chr7:117559593-117559595:+'), # ins
                          bsgenome)
    spacers <- find_spacers(extend_for_pe(gr), bsgenome, complement = FALSE)
    (spacers \%<>\% add_efficiency(bsgenome, 'Doench2014'))
        # conda create --name azimuthenv python=2.7
        # conda activate azimuthenv
        # pip install azimuth
        # pip install scikit-learn==0.17.1
    # spacers \%<>\% add_efficiency(bsgenome, 'Doench2016', condaenv = 'azimuthenv')
    # filter_efficient(spacers, bsgenome, 'Doench2016', 0.4, condaenv='azimuthenv')
# TFBS example
#-------------
    bedfile  <- system.file('extdata/SRF.bed', package = 'multicrispr')
    bsgenome <- BSgenome.Mmusculus.UCSC.mm10::BSgenome.Mmusculus.UCSC.mm10
    targets <- extend(bed_to_granges(bedfile, 'mm10'))
    spacers <- find_spacers(targets, bsgenome)
    # (spacers \%<>\% add_specificity(targets, bsgenome))
    # (spacers \%>\% add_efficiency(bsgenome, 'Doench2014'))
    # (spacers \%>\% add_efficiency(bsgenome, 'Doench2016'))
    # spacers \%>\% filter_efficient(bsgenome, 'Doench2016', 0.4)
}
\references{
Doench 2014, Rational design of highly active sgRNAs for 
CRISPR-Cas9-mediated gene inactivation. Nature Biotechnology,
doi: 10.1038/nbt.3026

Doench 2016, Optimized sgRNA design to maximize activity and minimize 
off-target effects of CRISPR-Cas9. Nature Biotechnology, 
doi: 10.1038/nbt.3437

Python module azimuth: github/MicrosoftResearch/azimuth
}
